{"version":3,"sources":["headofoperations/headofoperations.ts"],"names":["Ball","_super","context","w","h","name","url","score","_this","call","this","Date","getTime","toString","substr","setSize","shape","SHAPE","circle","__extends","prototype","draw","angle","WriteText","write","x","y","r","drop","v","setPosition","eat","setImg","setTimeout","Math","sqrt","Sprite","Robot","undefined","vx","vy","floor","random","index","names","length","splice","trans","atan2","move","stage","cos","sin","max","min","width","height","G","apply","arguments","roleSize","av","ballList","zdList","robotList","decompose","decomposeV","newGame","init","createRole","createZd","createRobot","createAccelerate","accelerate","Accelerate","view","appendChild","create","e","i","robot","push","role","createCopy","ball","ceil","running","createBallList","drawBallList","checkHits","drawZdList","drawRobot","moveScreen","scoreScreen","change","clientHeight","clientWidth","maxx","maxy","elem","style","left","top","forEach","item","zd","keyx","keyy","hits","j","over","obj","count","controlStage","getAngle","gameOver","gameOverStage","setText","remove","loading","console","log","JY","startCallback","endCallback","document","createElement","className","position","right","bottom","addEventListener","parentNode","removeChild","getElementById","offsetWidth","offsetHeight","Stage","descript","Discript","text","GameOver","title","Title","control","Control","rect","game","files","image","setup"],"mappings":"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","file":"headofoperations.js","sourcesContent":["/// <reference path=\"../../src/index.ts\" />\r\n/// <reference path=\"names.ts\" />\r\n(function () {\r\n    class Ball extends Sprite {\r\n        name: string = \"游客\" + (new Date().getTime()).toString().substr(-5);\r\n        url: string;\r\n        score: number = 0;\r\n        constructor(context: any, w: number, h: number, name?: string, url: string = 'head-a.png', score: number = 10) {\r\n            super(context, url);\r\n            this.score = score;\r\n            this.setSize();\r\n            this.url = url;\r\n            this.shape = SHAPE.circle;\r\n            this.name = name || this.name;\r\n        }\r\n        draw(angle?: number) {\r\n            this.setSize();\r\n            super.draw(angle);\r\n            let text = new WriteText(this.context);\r\n            text.write(this.name, this.x, this.y + this.r, null, '#cccccc')\r\n        }\r\n        drop(v: number) {\r\n            this.setPosition(this.x, this.y + v)\r\n        }\r\n        eat(url: string = 'eat-a.png') {\r\n            this.setImg(url);\r\n            setTimeout(() => this.setImg(this.url), 300);\r\n        }\r\n        setSize() {\r\n            //1分相当于math.pi*5*5\r\n            let r = Math.sqrt(this.score) * 5;\r\n            super.setSize(2 * r, 2 * r);\r\n        }\r\n    }\r\n    //机器人\r\n    class Robot extends Ball {\r\n        score: number = 0;\r\n        angle: number = 0;\r\n        v: number = 1;\r\n        vx: number = this.v;\r\n        vy: number = this.v;\r\n        constructor(public context: any) {\r\n            super(context, 10, 10, undefined, 'head.png');\r\n            let score = 10 + Math.floor(Math.random() * 10);\r\n            this.score = score;\r\n            let index = Math.floor(Math.random() * names.length - 1);;\r\n            this.name = names[index];\r\n            names.splice(index, 1);\r\n            this.trans();\r\n            this.setSize();\r\n        }\r\n        //随机更换方向\r\n        trans() {\r\n            this.angle = Math.atan2(-1 + Math.random() * 2, -1 + Math.random() * 2);\r\n            return this.angle;\r\n        }\r\n        move(stage: Stage) {\r\n            let angle = 0;\r\n            if (Math.random() * 1000 < 3) {\r\n                this.trans();\r\n            }\r\n            angle = - this.angle;\r\n            if (angle != 0) {\r\n                this.vx = Math.cos(angle) * this.v;\r\n                this.vy = Math.sin(angle) * this.v;\r\n            }\r\n            this.x = this.vx + this.x;\r\n            this.y = this.y - this.vy;\r\n            this.x = Math.max(0, this.x);\r\n            this.x = Math.min(this.x, stage.width - this.w);\r\n            this.y = Math.max(0, this.y);\r\n            this.y = Math.min(this.y, stage.height - this.h);\r\n            if (this.x == 0 || this.y == 0 || this.x == stage.width - this.w || this.y == stage.height - this.h) {\r\n                // console.log(this.x,this.y)\r\n                this.trans();\r\n            }\r\n        }\r\n        draw() {\r\n            super.draw(this.angle);\r\n        }\r\n        eat() {\r\n            super.eat('eat.png')\r\n        }\r\n    }\r\n    class G extends JY {\r\n        interval: 15;\r\n        role: Ball;\r\n        roleSize: number = 10;\r\n        v: number = 1;//速度 \r\n        av: number = 0;//加速度\r\n        vx: number = this.v;\r\n        vy: number = this.v;\r\n        ballList: Array<Sprite> = [];\r\n        score: number = 10;\r\n        zdList: Array<Sprite> = [];\r\n        angle: number;\r\n        robotList: Array<Robot> = [];\r\n        accelerate: Accelerate;\r\n        decompose: boolean = false;\r\n        decomposeV: number = 0;//分解速度\r\n        newGame() {\r\n            this.init();\r\n            this.createRole();\r\n            //创建5个炸弹\r\n            this.createZd();\r\n            this.createRobot();\r\n            super.newGame();\r\n            //\r\n            this.createAccelerate()//创建加速器\r\n        }\r\n        createAccelerate() {\r\n            this.accelerate = new Accelerate();\r\n            this.view.appendChild(this.accelerate.create((e) => {\r\n                this.v = 5;\r\n                this.decompose = true;\r\n            }, (e) => {\r\n                this.v = 1;\r\n                this.decompose = false;\r\n            }));\r\n        }\r\n        init() {\r\n            this.score = 10;\r\n            this.ballList = [];\r\n            this.zdList = [];\r\n            this.robotList = [];\r\n        }\r\n        createRobot() {\r\n            for (let i = this.robotList.length; i < 15; i++) {\r\n                let robot = new Robot(this.context);\r\n                robot.x = Math.random() * this.stage.width;\r\n                robot.y = Math.random() * this.stage.height;\r\n                robot.r = robot.h / 2;\r\n                this.robotList.push(robot);\r\n            }\r\n            this.decomposeV <= 0 ? this.decomposeV = 20 : undefined;\r\n            //加速时分解\r\n            if (this.decompose && this.decomposeV >= 20 && this.role.score > 0) {\r\n                // debugger;\r\n                // console.log('分解了')\r\n                this.decompose = false;\r\n                this.createCopy();\r\n                this.role.setSize();\r\n            }\r\n        }\r\n        //创建分身\r\n        createCopy() {\r\n            if (this.decomposeV >= 20) {\r\n                let ball: Robot = new Robot(this.context);\r\n                ball.name = '分身';\r\n                ball.score = Math.ceil(this.role.score / 2);\r\n                ball.setSize();\r\n                ball.x = this.vx > 0 ? this.role.x + this.role.r - 1 * (this.vx + this.role.w) : this.role.x + this.role.w - this.vx;\r\n                ball.y = this.vy < 0 ? this.role.y + this.role.r - 1 * (this.vy + this.role.h) : this.role.y + this.role.h + this.vy;\r\n                ball.shape = SHAPE.circle;\r\n                ball.setPosition(ball.x, ball.y);\r\n                this.role.score = Math.floor(this.role.score / 2);\r\n                this.robotList.push(ball);\r\n            }\r\n        }\r\n        createRole() {\r\n            // this.role = new Sprite(this.context, 'head.png');\r\n            this.role = new Ball(this.context, this.roleSize, this.roleSize);\r\n            this.role.x = this.stage.width / 2;\r\n            this.role.y = this.stage.height / 2;\r\n            this.role.r = this.role.h / 2;\r\n        }\r\n        running() {\r\n            // console.log(this.controlStage.getAngle())\r\n            super.running();\r\n            this.move()\r\n            this.role.draw(this.angle);\r\n            this.createBallList();//创建小点点\r\n            this.drawBallList();\r\n            //吃小点\r\n            this.checkHits();\r\n            this.drawZdList();\r\n            //robot\r\n            this.drawRobot();\r\n            this.createRobot();\r\n            //移动视窗\r\n            this.moveScreen();\r\n\r\n            this.scoreScreen.change('得分：' + this.role.score.toString());\r\n\r\n            this.decomposeV > 0 ? this.decomposeV-- : undefined;\r\n        }\r\n        moveScreen() {\r\n            let h = this.view.clientHeight;\r\n            let w = this.view.clientWidth;\r\n            let x = Math.floor(this.role.x + this.role.r - w / 2);\r\n            let y = Math.floor(this.role.y + this.role.r - h / 2);\r\n            let maxx = this.stage.width - w;\r\n            let maxy = this.stage.height - h;\r\n            this.stage.elem.style.left = -Math.min(maxx, Math.max(0, x)) + 'px';\r\n            this.stage.elem.style.top = -Math.min(maxy, Math.max(0, y)) + 'px';\r\n        }\r\n        drawZdList() {\r\n            this.zdList.forEach(item => {\r\n                item.draw()\r\n            });\r\n        }\r\n        drawRobot() {\r\n            this.robotList.forEach(item => {\r\n                item.move(this.stage)\r\n                item.draw();\r\n            })\r\n        }\r\n        createZd() {\r\n            for (let i = 0; i < 4; i++) {\r\n                let zd: Sprite = new Sprite(this.context, 'zd.png');\r\n                this.zdList.push(zd);\r\n                zd.setSize(10, 10);\r\n                let keyx: number = this.stage.width / 4;\r\n                let keyy: number = this.stage.height / 4;\r\n                if (i == 0) {\r\n                    zd.setPosition(keyx, keyy);\r\n                }\r\n                if (i == 1) {\r\n                    zd.setPosition(this.stage.width - keyx, keyy);\r\n                }\r\n                if (i == 2) {\r\n                    zd.setPosition(keyx, this.stage.height - keyy);\r\n                }\r\n                if (i == 3) {\r\n                    zd.setPosition(this.stage.width - keyx, this.stage.height - keyy);\r\n                }\r\n                zd.shape = SHAPE.circle;\r\n                // console.log(zd.x,zd.y)\r\n            }\r\n        }\r\n        checkHits() {\r\n            this.ballList.forEach((ball, i) => {\r\n                if (this.hits(this.role, ball)) {\r\n                    this.role.score++;\r\n                    this.role.setSize()\r\n                    // delete this.ballList[i];\r\n                    this.ballList.splice(i, 1);\r\n                    this.role.eat();\r\n                }\r\n                this.robotList.forEach((item, j) => {\r\n                    if (this.hits(item, ball)) {\r\n                        item.score++;\r\n                        item.setSize()\r\n                        // delete this.ballList[i];\r\n                        this.ballList.splice(i, 1);\r\n                        item.eat();\r\n                    }\r\n                    if (this.hits(item, this.role)) {\r\n                        if (item.score > this.role.score) {\r\n                            this.over();\r\n                        } else if (item.score < this.role.score) {\r\n                            this.role.score += item.score;\r\n                            this.robotList.splice(j, 1);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            this.robotList.forEach((item, i) => {\r\n                this.robotList.forEach((obj, j) => {\r\n                    if (i != j && this.hits(item, obj) && item.score != obj.score) {\r\n                        if (item.score > obj.score) {\r\n                            item.score += obj.score;\r\n                            this.robotList.splice(j, 1);\r\n                        } else {\r\n                            obj.score += item.score;\r\n                            this.robotList.splice(i, 1);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            this.zdList.forEach((ball) => {\r\n                if (this.hits(this.role, ball)) {\r\n                    this.decomposeV <= 0 ? this.decomposeV = 20 : undefined;\r\n                    this.createCopy();\r\n                }\r\n                this.robotList.forEach((item, i) => {\r\n                    if (this.hits(item, ball)) {\r\n                        this.robotList.splice(i, 1);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        drawBallList() {\r\n            this.ballList.forEach(item => {\r\n                item.draw()\r\n            });\r\n        }\r\n        createBallList() {\r\n            let count: number = 300 - this.ballList.length;\r\n            for (let i = 0; i < count; i++) {\r\n                let ball: Sprite = new Sprite(this.context, 'head.png');\r\n                this.ballList.push(ball);\r\n                ball.setSize(5, 5);\r\n                ball.x = Math.random() * this.stage.width;\r\n                ball.y = Math.random() * this.stage.height;\r\n                ball.shape = SHAPE.circle;\r\n            }\r\n        }\r\n        move() {\r\n            let angle = this.controlStage.getAngle();\r\n            this.angle = -angle;\r\n            if (angle != 0) {\r\n                this.vx = Math.cos(angle) * this.v;\r\n                this.vy = Math.sin(angle) * this.v;\r\n            }\r\n            // console.log(this.angle)\r\n            // return;\r\n            this.role.x = this.vx + this.role.x;\r\n            this.role.y = this.role.y - this.vy;\r\n            this.role.x = Math.max(0, this.role.x);\r\n            this.role.x = Math.min(this.role.x, this.stage.width - this.role.w);\r\n            this.role.y = Math.max(0, this.role.y);\r\n            this.role.y = Math.min(this.role.y, this.stage.height - this.role.h)\r\n        }\r\n        gameOver() {\r\n            super.gameOver();\r\n            this.gameOverStage.setText('得分：' + this.role.score);\r\n            this.accelerate.remove();\r\n        }\r\n        loading() {\r\n            console.log('loading...')\r\n            super.loading();\r\n        }\r\n    }\r\n    //加速面板\r\n    class Accelerate implements IScreen {\r\n        elem: HTMLElement;\r\n        create(startCallback?: Function, endCallback?: Function) {\r\n            this.elem = document.createElement('div');\r\n            this.elem.className = \"accelerate\";\r\n            // this.elem.style.background = 'url(act.png) no-repeaat'\r\n            this.elem.style.position = 'absolute';\r\n            this.elem.style.right = '10%';\r\n            this.elem.style.bottom = '10%';\r\n            this.elem.addEventListener('touchstart', (e) => {\r\n                startCallback(e);\r\n            }, false);\r\n            this.elem.addEventListener('touchend', (e) => {\r\n                endCallback(e);\r\n            }, false);\r\n            return this.elem;\r\n        }\r\n        remove() {\r\n            this.elem && this.elem.parentNode.removeChild(this.elem);\r\n        }\r\n    }\r\n    setTimeout(function () {\r\n        let view = document.getElementById('view');\r\n        let w = view.offsetWidth;\r\n        let h = view.offsetHeight;\r\n        let stage = new Stage(w * 3, h * 3);\r\n        let descript = new Discript('start');\r\n        descript.text = '<p class=\"title\">大头吃小头</p>'\r\n        let gameOver = new GameOver('restart');\r\n        let title = new Title('大头吃小头');\r\n        let control = new Control();\r\n        control.rect = [100, 100]\r\n        let game = new G(view, stage, title, descript, gameOver, control);\r\n        game.files = { image: ['act.png', 'head.png', 'head-a.png', 'eat-a.png', 'eat.png', 'zd.png'] };\r\n        game.setup();\r\n    }, 1000)\r\n})();"]}