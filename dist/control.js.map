{"version":3,"sources":["control.ts"],"names":["Control","this","rect","moveRect","elemPosition","angle","prototype","create","elem","document","createElement","className","style","position","width","height","left","bottom","moveElem","appendChild","moveCenter","map","d","elemCenter","resetPos","bindEvent","toPosition","transPosition","x","y","top","addEventListener","event","epos","touches","setPosition","bind","offsetLeft","offsetTop","pageX","pageY","x1","y1","console","log","ang","Math","atan2","c","sqrt","r","x2","cos","y2","sin","getAngle","remove","parentNode","removeChild"],"mappings":"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","file":"control.js","sourcesContent":["//// <reference path=\"iScreen.ts\" />\r\nimport IScreen from './iScreen';\r\n//操作界面\r\nexport default class Control implements IScreen {\r\n    elem: HTMLElement;\r\n    rect: Array<number> = [160, 160];\r\n    moveElem: HTMLElement;\r\n    moveRect: Array<Number> = [50, 50];\r\n    moveCenter: Array<any>;\r\n    elemCenter: Array<any>;\r\n    elemPosition: Array<Number> = [10, 10];\r\n    position: Array<any>;\r\n    toPosition:Array<number>;\r\n    private angle:number=0;//角度\r\n\r\n    create() {\r\n        this.elem = document.createElement('div');\r\n        this.elem.className = \"control\";\r\n        this.elem.style.position = 'absolute';\r\n        this.elem.style.width = this.rect[0] + 'px';\r\n        this.elem.style.height = this.rect[1] + 'px';\r\n        this.elem.style.left = this.elemPosition[0] + '%';\r\n        this.elem.style.bottom = this.elemPosition[1] + '%';\r\n        this.moveElem = document.createElement('div');\r\n        this.moveElem.className = 'move';\r\n        this.moveElem.style.position = 'absolute';\r\n        this.moveElem.style.width = this.moveRect[0] + 'px';\r\n        this.moveElem.style.height = this.moveRect[1] + 'px';\r\n        this.elem.appendChild(this.moveElem);\r\n        this.moveCenter = this.moveRect.map(function (d: number) { return d / 2 });\r\n        this.elemCenter = this.rect.map(function (d: number) { return d / 2 });\r\n        this.resetPos();\r\n        this.bindEvent();\r\n        return this.elem;\r\n    }\r\n    resetPos() {\r\n        //重置位置\r\n        // console.log(this.moveCenter)\r\n        this.toPosition = [0, 0];\r\n        this.transPosition();\r\n    }\r\n    //传入圆心转换成坐标,\r\n    transPosition() {\r\n        let x = (this.elemCenter[0] - this.moveCenter[0]) + this.toPosition[0];\r\n        let y = (this.elemCenter[1] - this.moveCenter[1]) - this.toPosition[1];\r\n        this.moveElem.style.left = x + 'px';\r\n        this.moveElem.style.top = y + 'px';\r\n\r\n    }\r\n    bindEvent() {\r\n        this.elem.addEventListener('touchstart', function (event:TouchEvent) {\r\n            let epos = event.touches[0] || event;\r\n            this.setPosition(epos)\r\n        }.bind(this), false);\r\n        this.elem.addEventListener('touchmove', function (event:TouchEvent) {\r\n            let epos = event.touches[0] || event;\r\n            this.setPosition(epos);\r\n        }.bind(this), false);\r\n        this.elem.addEventListener('touchend', function (event:TouchEvent) {\r\n            this.resetPos();\r\n        }.bind(this), false);\r\n    }\r\n    // 计算边界值,设置位置\r\n    setPosition(epos:Touch) {\r\n        this.position =  [this.elem.offsetLeft, this.elem.offsetTop];\r\n        let x: number = epos.pageX - this.position[0];\r\n        let y = epos.pageY - this.position[1];\r\n        // x= Math.min (x,this.rect[0]-this.moveCenter[0]);\r\n        // x = Math.max(x,this.moveCenter[0])\r\n        let x1 = (x - this.elemCenter[0]);//相对于圆点的位置\r\n        let y1 = -(y - this.elemCenter[1]);\r\n        console.log(x1, y1)\r\n        let ang = Math.atan2(y1, x1);\r\n        // this.angle = ang;\r\n        // console.log('角度：'+ang)\r\n        let c = Math.sqrt(x1 * x1 + y1 * y1);\r\n        let r = this.elemCenter[0] - this.moveCenter[0];//最长半径\r\n        if (c > r) {\r\n            // console.log('out', c)\r\n            let x2 = Math.cos(ang) * r;\r\n            let y2 = Math.sin(ang) * r;\r\n            //下面是另一种算法\r\n            // y2=y1*r/c;\r\n            // x2= x1*r/c;\r\n            // console.log('xy:', x1, y1)\r\n            // console.log('x2y2:',x2, y2)\r\n            x1 = x2;\r\n            y1 = y2;\r\n        }\r\n        this.toPosition = [x1, y1];\r\n        this.transPosition()\r\n    }\r\n    getAngle(){\r\n        // console.log(this.toPosition)\r\n        this.angle = Math.atan2(this.toPosition[1],this.toPosition[0]);\r\n        return this.angle;\r\n    }\r\n    //获取到角度\r\n    remove() {\r\n        this.elem.parentNode.removeChild(this.elem);\r\n    }\r\n}"]}