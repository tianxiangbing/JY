{"version":3,"sources":["sprite.ts"],"names":["SHAPE","exports","Sprite","context","url","this","x","y","w","h","sw","sh","sx","sy","r","shape","rect","getImg","prototype","setImg","img","Image","src","onload","console","log","setSize","getCenter","setCutSize","setPosition","draw","angle","save","translate","rotate","drawImage","Math","round","restore"],"mappings":"kCAEA,IAAYA,QAAZ,SAAYA,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,UAFWA,MAAAC,QAAAD,QAAAC,QAAAD,UAIZ,IAAAE,QAAA,WAcI,QAAAA,GAAYC,EAAcC,GAX1BC,KAAAC,EAAY,EACZD,KAAAE,EAAY,EACZF,KAAAG,EAAY,EACZH,KAAAI,EAAY,EACZJ,KAAAK,GAAa,EACbL,KAAAM,GAAa,EACbN,KAAAO,GAAa,EACbP,KAAAQ,GAAa,EACbR,KAAAS,EAAW,EAEXT,KAAAU,MAAcf,MAAMgB,KAEhBX,KAAKY,OAAOb,GACZC,KAAKF,QAAUA,EAuDvB,MArDID,GAAAgB,UAAAC,OAAA,SAAOf,GACHC,KAAKY,OAAOb,IAEhBF,EAAAgB,UAAAD,OAAA,SAAOb,GAEHC,KAAKe,IAAM,GAAIC,OACfhB,KAAKe,IAAIE,IAAMlB,EAQfC,KAAKe,IAAIG,OAAS,WACdC,QAAQC,IAAI,YAKpBvB,EAAAgB,UAAAQ,QAAA,SAAQlB,EAAWC,GACfJ,KAAKG,EAAIA,GAAGH,KAAKG,EACjBH,KAAKI,EAAIA,GAAGJ,KAAKI,EACjBJ,KAAKS,EAAIT,KAAKI,EAAE,GAEpBP,EAAAgB,UAAAS,UAAA,WAEI,OAAQtB,KAAKC,EAAGD,KAAKS,EAAET,KAAKE,EAAGF,KAAKS,IAExCZ,EAAAgB,UAAAU,WAAA,SAAWlB,EAAWC,GAClBN,KAAKK,GAAKA,EACVL,KAAKM,GAAKA,GAEdT,EAAAgB,UAAAW,YAAA,SAAYvB,EAAUC,GAClBF,KAAKC,EAAIA,EACTD,KAAKE,EAAIA,GAEbL,EAAAgB,UAAAY,KAAA,SAAKC,GACD1B,KAAKF,QAAQ6B,OACVD,IACC1B,KAAKF,QAAQ8B,UAAU5B,KAAKC,EAAED,KAAKS,EAAGT,KAAKE,EAAEF,KAAKS,GAClDT,KAAKF,QAAQ+B,OAAOH,GACpB1B,KAAKF,QAAQ8B,YAAY5B,KAAKC,EAAED,KAAKS,KAAMT,KAAKE,EAAEF,KAAKS,KAEvDT,KAAKK,IAAML,KAAKM,GAChBN,KAAKF,QAAQgC,UAAU9B,KAAKe,IAAKf,KAAKO,GAAIP,KAAKQ,GAAIR,KAAKK,GAAIL,KAAKM,GAAIN,KAAKC,EAAGD,KAAKE,EAAGF,KAAKG,EAAGH,KAAKI,GAGlGJ,KAAKF,QAAQgC,UAAU9B,KAAKe,IAAIgB,KAAKC,MAAMhC,KAAKC,GAAI8B,KAAKC,MAAMhC,KAAKE,GAAIF,KAAKG,EAAGH,KAAKI,GAGzFJ,KAAKF,QAAQmC,WAErBpC","file":"sprite.js","sourcesContent":["//sprite\r\n//形状\r\nexport enum SHAPE{\r\n rect,\r\n circle\r\n}\r\nexport default class Sprite {\r\n    ///\r\n    context: any;//画布对象\r\n    x: number = 0;//x坐标\r\n    y: number = 0;//y坐标\r\n    w: number = 0;//宽度 \r\n    h: number = 0;//高度\r\n    sw: number = 0;//剪裁的宽\r\n    sh: number = 0;//前裁的高\r\n    sx: number = 0;//剪裁的x\r\n    sy: number = 0;//前裁的y\r\n    r:number = 0 ;//半径\r\n    img: any;//图像地址\r\n    shape:SHAPE = SHAPE.rect;//默认方形\r\n    constructor(context: any, url: string) {\r\n        this.getImg(url);\r\n        this.context = context;\r\n    }\r\n    setImg(url: string) {\r\n        this.getImg(url);\r\n    }\r\n    getImg(url: string): void {\r\n        //地址转换成img对象 \r\n        this.img = new Image();\r\n        this.img.src = url;\r\n\r\n        // this.img = document.createElement('img');\r\n        // this.img.src = url;\r\n        // console.log(this.img.readyState)\r\n        // this.img.onreadystatechange=function(){\r\n        //     console.log(222,this.img.readyState)\r\n        // }\r\n        this.img.onload = function () {\r\n            console.log('loaded')\r\n        }\r\n        // this.img = document.createElement('img');\r\n        // this.img.src = url;\r\n    }\r\n    setSize(w?:number, h?:number) {\r\n        this.w = w||this.w;\r\n        this.h = h||this.h;\r\n        this.r = this.h/2;\r\n    }\r\n    getCenter(){\r\n        //圆心位置\r\n        return [this.x +this.r,this.y +this.r];\r\n    }\r\n    setCutSize(sw:number, sh:number) {\r\n        this.sw = sw;\r\n        this.sh = sh;\r\n    }\r\n    setPosition(x:number, y:number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    draw(angle?:number) {\r\n        this.context.save();\r\n        if(angle){\r\n            this.context.translate(this.x+this.r ,this.y+this.r)\r\n            this.context.rotate(angle);\r\n            this.context.translate(-(this.x+this.r) ,-(this.y+this.r));\r\n        } \r\n        if (this.sw && this.sh) {\r\n            this.context.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\r\n        } else {\r\n            //不需要剪切\r\n            this.context.drawImage(this.img,Math.round(this.x), Math.round(this.y), this.w, this.h);\r\n        }\r\n        // this.context.drawImage(this.img,10,10);\r\n        this.context.restore();\r\n    }\r\n}"]}